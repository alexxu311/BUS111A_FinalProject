---
title: "FianlReport"
author: "Alex Xu,Bingyu Xu,Wenlan Xu,Binyao Cheng"
date: "Dec 4, 2018"
output:
  word_document: default
  pdf_document: default
  html_document:
    df_print: paged
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
 The URL for our Team GitHub repository is 
 https://github.com/alexxu311/BUS111A_FinalProject.git
 Team: Alex Xu,Bingyu Xu,Wenlan Xu,Binyao Cheng
 Class: BUS 111A
 Project: Analyzing Black Friday Purchases for customers and product categories
 
##Part one
####Introduction 
This dataset is sampled from a retail store purchases history. The retail store is hoping that the dataset could help them identify the correlation between purchases and different independent variable such as geographical location, age spread, marital status and product categories. Looking through the data, we have found the main problem is that missing values are found in sub product categories and meanwhile we have too limited information about the variable “purchase”, having no idea about the unit or the representation of it and finally, having product categories and occupation written in number would also cause confusion since the representation of the numbers are not stated. Analyzing such dataset could eventually help with the retail store by giving information about consumers’ behaviors so that the retail store could maximize its profit by targeting its customers and providing the most suitable products for them. The broad goals of our project is to study how the consumers’ characteristics correlate with the amount of purchases they made. 

```{r}
setwd("C:/Users/alexx/OneDrive/桌面/Rprojects")

#load packages
library(dplyr)
library(ggplot2)
library(rmarkdown)
library(gridExtra)
#read the file into rstudio
BlackFriday <- read.csv('BlackFriday.csv', header = T)
```
####2a. Describe the "conceptual" measure types of the different variables in your data. 

There are 12 measure types of the different variables in the dataset. The class of each of them is shown as below: 
  User ID: is a factor, a  categorical nominal variable. User ID has 5891 levels, representing 5891 consumers in the dataset.
Product ID: is a factor, a  categorical nominal variable. Product ID has 3623 levels, representing 3623 SKU in the dataset.
Gender: is a factor, a categorical nominal variable, representing categories male and female. 
Age: is a factor, a categorical nominal variable. Age has seven levels, each representing an age range.
Occupation: is a factor, a categorical nominal variable. Occupation has 20 levels, representing consumers’ 20 different types of occupation. 
City_Category: is a factor, a categorical nominal variable. City_Category has 3 levels, representing 3 types of cities consumer live in. 
Stay_In_Current_City_Years: is a factor, a categorical nominal variable. Stay_In_Current_City_Years has 5 levels, representing 5 length of living in the current city.
Marital Status: is a factor, a categorical nominal variable. It has two levels, representing two marital status which are married and single. 
Product_Category_1/Product_Category_2/Product_Category_3: are factora, discrete nominal variables, representing categories of product.
Purchase: is stored as integer. 

####b. Data Cleaning – Mention all the steps you took to clean the data

First, we change the computer data-types of the variables. 
We change the data-types of "User_ID", " Occupation", "Marital_Status", "Product_Category_1", "Product_Category_2", "Product_Category_3", "Product_ID", and "Gender" to factor. 
The reason for the change is that all those variables are discrete and nominal, 
and the number values of these categorical variables do not represent the amount but different categories within each variable. 
Then, we look for the missing data. 
```{r}
colSums( is.na(BlackFriday))
```
From the table we can see that there is a considerable amount of missing data in "Product_Category_2" and "Product_Category_3". 
Due to the missing data, the dataset cannot generate much information about the customer behavior in terms of product categories. 
Therefore, we delete the columns "Product_ID", "Product_Category_2" and "Product_Category_3" 
In order to examine consumer behaviors, we merge the rows based on "User_ID" and sum up all purchases made by the same consumer. This new dataset pertaining to each consumer provides information on how much does each consumer spend in total and how many purchases each consumer made during Black Friday.
In order to examine which products are more profitable to sellers, we create another dataset pertaining to each category of products. This new dataset provides information on the total sales each category of products made for sellers, and the number of consumers attracted by each category of products.  
Based on the cleaned data, we focus on analyzing both consumer and product characteristics and how different characteristics contribute to Black Friday sales for retail stores. 
```{r}
#eliminate variabels Product_Category_2,Product_Category_3 due to missing variables
BlackFriday[,c("Product_Category_2","Product_Category_3")] <- NULL

#setting variable types as factor 
BlackFriday$User_ID <- as.factor(BlackFriday$User_ID)
BlackFriday$Occupation <- as.factor(BlackFriday$Occupation)
BlackFriday$Marital_Status <- as.factor(BlackFriday$Marital_Status)
BlackFriday$Gender <- as.factor(BlackFriday$Gender)
BlackFriday$Product_Category_1 <- as.factor(BlackFriday$Product_Category_1)
BlackFriday$Product_ID <- as.factor(BlackFriday$Product_ID)

# create a new consumer dataframe
# get number of purchases made by each consumer
PurchaseFreq <- as.data.frame(table(BlackFriday$User_ID))
# get total dolloar amount of purchase made by each consumer
consumerPurchase <- aggregate(Purchase ~ User_ID, FUN = sum, BlackFriday)
consumerData <- BlackFriday %>% distinct(User_ID, .keep_all = TRUE) 
# attach newly created columns to original data frame accoording to consumerID
consumerData <- merge(consumerData, PurchaseFreq, by.x="User_ID", by.y="Var1")
consumerData <- merge(consumerData, consumerPurchase, by="User_ID")
consumerData$Purchase.x <- NULL
consumerData$Product_ID <- NULL
#change the name of newly created columns
colnames(consumerData)[colnames(consumerData)=="Freq"] <- "PurchaseNumber"
colnames(consumerData)[colnames(consumerData)=="Purchase.y"] <- "TotalPurchase"

# create a new product dataframe
# get the number of times each category of product is purchased by consumer
productFreq <- as.data.frame(table(BlackFriday$Product_Category_1))
# get the total dollar amount consumers spent on each category of product
productPurchase <- aggregate(Purchase~Product_Category_1, FUN=sum, BlackFriday)
productData <- BlackFriday %>% distinct(Product_Category_1, .keep_all=TRUE)
productData <- productData %>% arrange(Product_Category_1)
# delete variables that are not related to product
productData$User_ID <- NULL
productData$Gender <- NULL
productData$Age <- NULL
productData$Occupation <- NULL
productData$City_Category <- NULL
productData$Stay_In_Current_City_Years <- NULL
productData$Marital_Status <- NULL
# attach newly created columns to original data frame
productData$Purchase <- productPurchase$Purchase
productData$PurchaseNumber <-productFreq$Freq
productData$Product_ID <- NULL
#change the name of created variables
colnames(productData)[colnames(productData)=="Purchase"] <- "TotalPurchase"

consumerUnique <- BlackFriday %>% distinct(User_ID, .keep_all = TRUE)
# for each product, show how many consumers purchased this product
consumerPerProduct <- as.data.frame(table(consumerUnique$Product_Category_1))
productData <- merge(productData, consumerPerProduct, by.x="Product_Category_1", by.y="Var1")
colnames(productData)[colnames(productData)=="Freq"] <- "consumerPerProduct"
# for each "Product_Category_1", show how many different items there were
uniqueProductID <- BlackFriday %>% distinct(Product_ID, .keep_all=TRUE)
itemNumber <- as.data.frame(table(uniqueProductID$Product_Category_1))
productData <- merge(productData, itemNumber, by.x="Product_Category_1", by.y="Var1")
#change the name of created variables
colnames(productData)[colnames(productData)=="Freq"] <- "itemNumber"
#make the dataframe prodectData ordered by Product_Category_1
productData <- productData[order(productData$Product_Category_1),]
```
From here, only consumerdata and productdata will be used as our dataframes.

####3. Summary statistics and Data Visualizations

```{r}
#Data Visualization by product_category1
p1 <- ggplot(productData,aes(x=Product_Category_1,y=itemNumber)) + geom_col() + 
  ggtitle("Number of item types for each PC1")+ xlab("Product Category 1") +
  ylab("Number of item types")+ theme(plot.title = element_text(hjust = 0.5,size = 12))

p2 <- ggplot(productData,aes(x=Product_Category_1,y=TotalPurchase)) + geom_col() + 
  ggtitle("Total revenue for each PC1")+ xlab("Product Category 1") +
  ylab("Total Revenue($)")+ theme(plot.title = element_text(hjust = 0.5,size = 12))

p3 <- ggplot(productData,aes(x=Product_Category_1,y=PurchaseNumber)) + geom_col() + 
  ggtitle("Number of purchases for each PC1")+ xlab("Product Category 1") +
  ylab("Number of Purchases made")+ theme(plot.title = element_text(hjust = 0.5,size = 12))

p4 <- ggplot(productData,aes(x=Product_Category_1,y=consumerPerProduct)) + geom_col() + 
  ggtitle("Number of consumers for each PC1")+ xlab("Product Category 1") +
  ylab("Number of consumers")+ theme(plot.title = element_text(hjust = 0.5,size = 12))
grid.arrange(p1,p2,nrow = 1)
grid.arrange(p3,p4,nrow = 1)
```

By visualization, we can tell which product is the most popular and profitable and therefore the store could put up more such products. From the graph, we found that the most popular product categries are 1,5 and 8, which are also the top three profitable categories as well. Category 1 brought the store highest revenue and also the most number of consumers. Category 2 shows the most number of purchase but only half of 1's revenue indicates a lower price.
```{r}
p1 <- ggplot(consumerData, aes(x=City_Category, y=TotalPurchase,col=City_Category))+geom_col()+
    ggtitle("Total Purchase across Cities")+ xlab("City Category") + ylab("Total  Purchase ($)")+theme(plot.title = element_text(hjust = 0.5,size = 12))+
    theme(plot.margin = unit(c(0,0,0,0), "cm"))
p2 <- ggplot(consumerData, aes(x=City_Category, y=TotalPurchase,col = City_Category))+geom_boxplot()+
     ggtitle("Distribution of Total Purchase across Cities")+ xlab("City Category") + ylab("Total Dollar Amount Purchase ($)")+ theme(plot.title = element_text(hjust = 0.5,size = 12))
grid.arrange(p1,p2,nrow = 1)
```

Variable "City_Category" shows whether consumers from different types of cities vary in dollar amount of purchase on Black Friday. Knowing consumers from which type of city make the most purchase, retail stores can target to consumers from the most profitable area.
Since "City_Category" is a categorical variable, we use bar plot to compare the total dollar amount of purchase made by consumers from different kinds of cities. Consumers from C City make the most dollar amount of purchase, followed by B City and then A City. The median, 25th and 75th percentile are comparable for the three types of cities. All types of cities have large outliers, and B City has one extreme outlier who makes the most purchase out of all consumers. While the distribution of purchase from consumers live in C City is similar to that of A and B City, consumers from C City contribute the most to the total dollar amount of purchase. This implies that there are more consumers from C City compared to other cities.
```{r}
table(consumerData$City_Category)
```
The frequency table confirms that City C, with 3,139 consumers, contains the majority of consumers, compared to City A which have 1,045 consumers and City B with 1,707 consumers.
```{r}
p1 <- ggplot(consumerData, aes(Occupation))+geom_bar()+ggtitle("Distribution of Occupation")+ylab("Number of Consumers")+theme(plot.title = element_text(hjust = 0.5,size = 12))
p2 <- ggplot(consumerData, aes(x=Occupation, y=TotalPurchase))+geom_boxplot()+ylab("Total Purchase ($)")+ggtitle("Total Purchase ($) across Occupations")+theme(plot.title = element_text(hjust = 0.5,size = 12))
grid.arrange(p1,p2,nrow = 1)
```

Variable "Occupation" indicates consumer occupation, from which we can examine whether purchasing behaviors differ across consumers with different occupations. From the bar graph, the number of consumers varies largely among occupations. While occupation 4 has more than 700 consumers, occupation 8 only has less than 20 consumers. It is likely that consumers with certain occupation, such as 4 and 7, are more likely to engage in Black Friday purchases. It is also noticeable that almost 700 consumers do not report their occupations. Since "Occupation" is a categorical variable, we use box plot to compare difference in total purchases between different occupations. The graph indicates that distribution of total purchase varies across occupations. While occupation 5 is the most dispersed, occupation 9 is the least dispersed. Consumers with occupation 20 has the highest  median spending, and consumers with occupation 9 and 13 had the lowest median spending. Most of the occupations have skewed distribution, as 75 percentile is distorted far away from the median and 25 percentile is closer to the median. One extreme example is occupation 8. Consumers with occupation 8 have the lowest median purchase, but the distribution is skewed in that consumers above 75 percentile contribute disproportionately more to the purchases, while consumers below 25 percentile make purchases similar to the median.    
```{r}
# Statistics and Data Visualization by City and Stay_In_Current_City_Years
ggplot(consumerData, aes(x=Stay_In_Current_City_Years, y=TotalPurchase,col = Stay_In_Current_City_Years))+
  geom_boxplot()+facet_wrap(~City_Category)+
  ggtitle("Distribution of Total Purchase across Number of Years Staying in the City")+ 
  xlab("Years Staying in Current City") + ylab("Total Dollar Amount Purchase ($)")+ theme(plot.title = element_text(hjust = 0.5,size = 12))
```

 We choose the variable "City_Category" and "Stay_In_Current_City_Years" because they can give the retailer clear information about the relationships between customers purchases and the city they are living. We select column bar as the visualization because it clearly shows the amount of purchases across consumers from different cities and with different years living in the cities. We choose to put "Stay_In_Current_City_Years" on x-axis and "Purchase" on y-axis and faceted the graph by cities. In this way, we can answer the following questions: Do the cities have the similar patterns in terms of the relationship between "Stay_In_Current_City_Years" and "Purchases"? For the buyers who contribute the most purchases, how long have those buyers lived in their cities? Although the amount of purchases is different within different cities, it is hard to see which level of Stay_In_Current_City_Years contributes the most dollar purchases within each city.
```{r}
# Statistics and Data Visualization by Marital Status
ggplot(consumerData,aes(x = Marital_Status, y= TotalPurchase, col= Marital_Status))+ geom_col()+facet_wrap(~Gender)+
  xlab("Marital Status")+ ylab("Total Dollar Amount Purchase ($)")+ggtitle("Distribution of Total Purchase between Marital Status")+ 
  theme(plot.title = element_text(hjust = 0.5,size = 12))
```

 We choose the variable "Marital_Status" and "Purchase" because the retailer could know if purchasing decisions are affected the marital status of customers. We select column bar as visualization because "Marital_Status" is a factor and bar can clearly shows the amount of "Purchases" within each category. We select column bar as the visualization because it can clearly show the amount of "Purchases" within each category. We put "Marital_Status" on x-axis and "Purchase" on y-axis and faceted by genders.In this way, we can answer the following questions: Among female consumers, which group of customers consume more? Married or unmarried? Among male consumers, which group of customers consume more? Married or unmarried? Unmarried customers contribute to more purchases no matter male or female. Men make substantially more purchase than women.
```{r}
# Statistics and Data Visualization of age and gender
ggplot(consumerData, aes(x= Age)) + geom_bar() + 
  theme(axis.text = element_text(size = 5))+ ggtitle("Total  Number of People for Each Age Group") + 
  facet_wrap(~Gender)+ xlab("Age Group") + ylab("Total Numbers of People in the dataset")+ 
  theme(plot.title = element_text(hjust = 0.5,size = 12))
ggplot(consumerData, aes(x= Age,y=TotalPurchase,color=Gender)) + geom_boxplot() + 
  theme(axis.text = element_text(size = 5))+ ggtitle("Distribution of Total Purchase between Genders across AgeGroups") + 
 xlab("Age Groups, distinguished by gender") + ylab("Total Dollar Amount Purchase ($)")+ 
  theme(plot.title = element_text(hjust = 0.5,size = 12))

```
 Before we look into distribution of total amount of purchase, we need to figure out the units of people involves to have a better interpretation of how those consumers behave. We use barplot to count number of people in each gender. We find that the majority consumer of this store is male. Then we count number of people in each age groups. We find that the most numbers of people is the 26-35 yrs old age group, the second 36-45 yrs old and the third 18-25 yrs old. Thus, people from 18-45 yrs old are the majority consumers in this store. People from 0-17 yrs old are the least number of consumers.
 
 we consider age and gender together and draw plots of different age groups grouped by gender because age and gender are closely related factors in determining consumption behaviors. For example, a man of 0-17 yrs old have different purchasing behavior from that of a 55+ yrs old woman. “Gender” and “Age” are discrete variables , and “TotalPurchase” is a continuous variable, and thus we use barplot to show the distribution of TotalPurchase. Therefore, we can know which age group has spent more and are more preferable of this store,and which sex makes more contribution.Our conclusion is that since male consumers have more outliers than that of female consumers, the distribution of purchase of male consumers are more disperse. And the average TotalPurchase of each man are bigger than that of each woman for all age groups except for 55+ group. The average of TotalPurchase for 55+ years old female and male are approximately the same, but male consumers have more outliers.Overall, male consumers have spent more than female on average # Regardless of gender, 26-35 yrs old people spent most amount of money in this store, 36-45 yrs old people the second.
 
####Conclusion on first part
 To improve the graphs, we first decide to use facet to include another independent variable into the graph and colored by variable on x-axis so that we can look at the relationship between two related independent variable and one dependent variable which is Purchase for all the graphs. Then, we have used ggtitle,xlab,ylab to add appropriate titles and labels. Finally, we moderated the size of titles and labels and center the title as well. 
Conclusion
 From the data pattern explained above, we conclude that among all the customers in the dataset, customers who live in the City C have the largest purchasing power over customers in City A and City B. For all the three cities, customers who have lived in their current city for one year contribute the most to the dollar amount of purchases; therefore, this group of consumers are likely to spend the most during the Black Friday. By visualizing the data in terms of gender and age, first, we can conclude that male consumers make more purchases than females in all age groups. Second, regardless of gender, customers who are between 26 and 35 years old spend the most. In addition, the visualization of the relationship between dollar amount of purchase and marital status and gender indicates that single males make more purchases than any other groups of customers. And within both married and single groups, males make more purchases than females. The results have a few implications for firm's manager. First, this report could help the manager know consumers' needs. With the analysis of which group of people make the most purchase, the manager could change the brands and products they order from the supplier in order to bring larger profits.  They might reduce products that are not preferable by people who have the strongest purchasing power and increase products that could appropriately fulfill those people's needs. This could also be an indication for next Black Friday's stock for those people would certainly come back to the store and the store need more stocks of products those people like. Second, This result could also be an implication of the marketing campaign for next year. The manager could get a better understanding of the identity of the majority of consumers from the report. Therefore, the manager could change marketing campaign that attract more people of interest.
 
##Part two - Hypothesis Testing and Regression

#### Adding Gender to the regression to examine the effects of gender on consumer level total purchase
```{r}
lm_Gender=lm(log(TotalPurchase)~factor(City_Category)+factor(Occupation)+factor(Gender),data=consumerData)
summary(lm_Purchase)
```
Adding ‘Gender’ to the regression does not change the coefficients of City categories. This means the effects of city category on TotalPurchase per consumer are not affected by gender. However, we observe several changes in Occupation. Consumers of Occupation 9 does not spend significant different amount of money per person on average from those who do not have occupation info. This means gender can better explain the total dollar spent per person on average of people with Occupation 9, instead of what kind of occupation the person has. In addition, for consumers with occupation 3 and 7, TotalPurchase per person become statistically significant. On a 90% confidence level, consumers with occupation 3 and occupation 7 spend 0.13% less on average and 0.09% less on average than those who don’t have occupation information. Thus, occupation 3 and  7 have some relationship with gender. Then total dollar spent per person of male is significantly different from female on average, spending 0.29% more average keeping other predictors at a 99.9% confidence level. Lastly, adj. R-squared increase from 12.56% to 14.12%, indicating that more variation in TotalPurchase could be explained by predictors. We have a better fit of the data now.

#### Adding Age to the regression to examine the effects of age groups on consumer level total purchase
```{r}
lm_Gender=lm(log(TotalPurchase)~factor(City_Category)+factor(Occupation)+factor(Gender)+factor(Age),data=consumerData)
summary(lm_Purchase)
```
we observe that adding ‘Age’ to our regression model does not affect coefficients for ‘Gender’ and ‘city categories’. For consumers with occupation 16 and 17, TotalPurchase per person become statistically significant. On a 90% confidence level, consumers with occupation 16 and occupation 17 spend 0.12% more on average and 0.09% less on average than those who don’t have occupation information, given age. Thus, occupation 16 and  17 have some relationship with age. For age groups, Consumers in 26-35 and 36-45 spend respectively 0.27% and 0.23% more than consumers who are under 18 years old at a 95% confidence level. In addtion, adj. R-squared increase slightly to 14.7%, indicating a better fit of the data.


####Conclusion on part two
From the tests and regressions we conducted, we found that consummers's purchase power differ significantly across cities with B the most profitable and C the least. As for occupation, 20 spends significantly more and 9,10,13 spend less. Though years stay in the city does not contribute directly to purchase, we found that for those who stay in city B three years or more and city C for four or more years tend to spend more. Marital status also doesn't effect purchase directly, but we have found that unmarried male spend more than unmarried female. As for age, we have found that age group of 26-35 has the most purchasing power followed by 36-45 and 18-25. Therefore, we think that the store's ideal target customers should be male with age between 26-35, occupation 20 and living in city B for three or more years


####Predictive Analysis
We will now build predicting models to forecast the wallet-spend for each individual customers. 

```{r}
#Split the dataset randomly in a 90-10 split for training and validation sets
set.seed(3)
validation.index = sample(seq(1,nrow(consumerData)), 
                          floor(0.10*nrow(consumerData)))
validationData = consumerData[validation.index, ]
trainingData = consumerData[-validation.index, ]
#Run each regression model on the training set and get the prediction error from the validation set

prediction.error = function(lm_model, validationData){
  predicted.units = exp(predict(lm_model, validationData))
  error = sqrt(mean((predicted.units-validationData$TotalPurchase)^2))
}

#model1 only use gender
lm1 <- lm(log(TotalPurchase) ~ Gender, data = consumerData)
#model2 add age
lm2 <- lm(log(TotalPurchase) ~ Gender + Age, data = consumerData)
#model3 add occupation
lm3 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation, data = consumerData)
#model4 add stay in city years
lm4 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years, data = consumerData)
#model5 add city categories
lm5 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years + City_Category, data = consumerData)
#model6 add marital status
lm6 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years + Marital_Status + City_Category, data = consumerData)
#model7 add interactions of marital and gender
lm7 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years + City_Category + Marital_Status*Gender, data = consumerData)
#model8 add interaction of gender and occupations 
lm8 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years + City_Category + Marital_Status*Gender + Occupation*Gender, data = consumerData)
#model9 add interaction of city categories and occupations  
lm9 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years + City_Category + Marital_Status*Gender + Occupation*Gender + City_Category*Occupation, data = consumerData)
#model10 add interaction of city categories and gender
lm10 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years + City_Category + Marital_Status*Gender + Occupation*Gender + City_Category*Occupation + City_Category*Gender, data = consumerData)
#model11 add interaction of city categories and stay in current city years
lm11 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years + City_Category + Marital_Status*Gender + Occupation*Gender + City_Category*Occupation + City_Category*Gender + City_Category*Stay_In_Current_City_Years, data = consumerData)
#model12 remove interaction terms of gender&marital status
lm12 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years + City_Category + Occupation*Gender + City_Category*Gender + City_Category*Stay_In_Current_City_Years + City_Category*Occupation, data = consumerData)
#model13 add interaction of marital status and occupation
lm13 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years + City_Category + Occupation*Gender + City_Category*Gender + City_Category*Stay_In_Current_City_Years + City_Category*Occupation + Marital_Status*Occupation, data = consumerData)
#model14 add interation of age and gender
lm14 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years + City_Category + Occupation*Gender + City_Category*Gender + City_Category*Stay_In_Current_City_Years + City_Category*Occupation + Marital_Status*Occupation + Age*Gender, data = consumerData)
#model15 add interation of age and occupations
lm15 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years + City_Category + Occupation*Gender + City_Category*Gender + City_Category*Stay_In_Current_City_Years + City_Category*Occupation + Marital_Status*Occupation + Age*Gender + Age*Occupation, data = consumerData)
#model16 add purchase number 
lm16 <- lm(log(TotalPurchase) ~ Gender + Age + Occupation + Stay_In_Current_City_Years + City_Category + Occupation*Gender + City_Category*Gender + City_Category*Stay_In_Current_City_Years + City_Category*Occupation + Marital_Status*Occupation + Age*Gender + Age*Occupation + PurchaseNumber, data = consumerData)


#calculate prediction errors for every models
error_model1 = prediction.error(lm1, validationData)
error_model2 = prediction.error(lm2, validationData)
error_model3 = prediction.error(lm3, validationData)
error_model4 = prediction.error(lm4, validationData)
error_model5 = prediction.error(lm5, validationData)
error_model6 = prediction.error(lm6, validationData)
error_model7 = prediction.error(lm7, validationData)
error_model8 = prediction.error(lm8, validationData)
error_model9 = prediction.error(lm9, validationData)
error_model10 = prediction.error(lm10, validationData)
error_model11 = prediction.error(lm11, validationData)
error_model12 = prediction.error(lm12, validationData)
error_model13 = prediction.error(lm13, validationData)
error_model14 = prediction.error(lm14, validationData)
error_model15 = prediction.error(lm15, validationData)
error_model16 = prediction.error(lm16, validationData)

# Show a table with 2 columns
data.frame(Names = c("Model1","Model2", "Model3",
                     "Model4", "Model5", "Model6","Model7", "Model8",
                     "Model9", "Model10", "Model11", "Model12", "Model13", "Model14", "Model15", "Model16"), 
           Error = c(error_model1,error_model2, error_model3, 
                     error_model4, error_model5, error_model6,error_model7, error_model8, 
                     error_model9, error_model10, error_model11, error_model12,    error_model13, error_model14, error_model15, error_model16))
```
From the result, we can tell that the 15th model gives the least root mean squared error.
```{r}
summary(lm15)
```

```{r}
test <- expand.grid(Gender=levels(consumerData$Gender),Age = levels(consumerData$Age),Occupation = levels(consumerData$Occupation),City_Category = levels(consumerData$City_Category),Stay_In_Current_City_Years = levels(consumerData$Stay_In_Current_City_Years),Marital_Status = levels(consumerData$Marital_Status))

Predict <- predict(lm15,test,se.fit = T)
test <- cbind(test,"Predicted_value" = Predict$fit,"Predicted_se" = Predict$se.fit)

test$CI_lower <- test$Predicted_value - 1.96*test$Predicted_se
test$CI_higher <- test$Predicted_value + 1.96*test$Predicted_se
test$Predicted_value <- exp(test$Predicted_value)
test$CI_lower <- exp(test$CI_lower)
test$CI_higher <- exp(test$CI_higher)
```

